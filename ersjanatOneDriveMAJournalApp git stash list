[33mcommit 1f133f0a79ea90fff75aa5781e7c4f22786ac591[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: janaelkholy <jana.tarek888@hotmail.com>
Date:   Fri Nov 29 01:13:27 2024 +0000

    Save progress before rebase

[1mdiff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml[m
[1mindex d2e7973..efbb501 100644[m
[1m--- a/.idea/deploymentTargetSelector.xml[m
[1m+++ b/.idea/deploymentTargetSelector.xml[m
[36m@@ -4,10 +4,17 @@[m
     <selectionStates>[m
       <SelectionState runConfigName="app">[m
         <option name="selectionMode" value="DROPDOWN" />[m
[32m+[m[32m<<<<<<< HEAD[m
         <DropdownSelection timestamp="2024-10-23T14:53:07.648875500Z">[m
           <Target type="DEFAULT_BOOT">[m
             <handle>[m
               <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\atnof\.android\avd\Medium_Phone_API_35.avd" />[m
[32m+[m[32m=======[m
[32m+[m[32m        <DropdownSelection timestamp="2024-11-10T22:31:00.152152900Z">[m
[32m+[m[32m          <Target type="DEFAULT_BOOT">[m
[32m+[m[32m            <handle>[m
[32m+[m[32m              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\janat\.android\avd\Medium_Phone_API_35.avd" />[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
             </handle>[m
           </Target>[m
         </DropdownSelection>[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mindex cfc7703..1f6bdc3 100644[m
[1m--- a/.idea/vcs.xml[m
[1m+++ b/.idea/vcs.xml[m
[36m@@ -1,6 +1,10 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
   <component name="VcsDirectoryMappings">[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m=======[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
     <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
     <mapping directory="$PROJECT_DIR$/JournalApp" vcs="Git" />[m
   </component>[m
[1mdiff --git a/app/build.gradle.kts b/app/build.gradle.kts[m
[1mindex 5e5a50e..4a3f77c 100644[m
[1m--- a/app/build.gradle.kts[m
[1m+++ b/app/build.gradle.kts[m
[36m@@ -1,3 +1,4 @@[m
[32m+[m[32m<<<<<<< HEAD[m
 //plugins {[m
 //    alias(libs.plugins.android.application)[m
 //    alias(libs.plugins.jetbrains.kotlin.android)[m
[36m@@ -83,6 +84,11 @@[m
 plugins {[m
     alias(libs.plugins.android.application) // Alias for Android application plugin[m
     alias(libs.plugins.jetbrains.kotlin.android) // Alias for Kotlin Android plugin[m
[32m+[m[32m=======[m
[32m+[m[32mplugins {[m
[32m+[m[32m    alias(libs.plugins.android.application) // Android Application Plugin[m
[32m+[m[32m    alias(libs.plugins.jetbrains.kotlin.android) // Kotlin Plugin[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
 }[m
 [m
 android {[m
[36m@@ -119,16 +125,26 @@[m [mandroid {[m
     }[m
 [m
     composeOptions {[m
[32m+[m[32m<<<<<<< HEAD[m
         kotlinCompilerExtensionVersion = "1.5.4" // Specify the Compose compiler version[m
     }[m
 [m
     buildFeatures {[m
         viewBinding = true // Enable ViewBinding[m
         compose = true // Enable Jetpack Compose[m
[32m+[m[32m=======[m
[32m+[m[32m        kotlinCompilerExtensionVersion = "1.5.4"[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    buildFeatures {[m
[32m+[m[32m        viewBinding = true[m
[32m+[m[32m        compose = true[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
     }[m
 }[m
 [m
 dependencies {[m
[32m+[m[32m<<<<<<< HEAD[m
     // Core Android libraries[m
     implementation("androidx.core:core-ktx:1.13.1")[m
     implementation("androidx.appcompat:appcompat:1.7.0")[m
[36m@@ -155,11 +171,24 @@[m [mdependencies {[m
     implementation("androidx.core:core-ktx:1.9.0")[m
     implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.2")[m
     implementation("androidx.activity:activity-compose:1.7.2")[m
[32m+[m[32m=======[m
[32m+[m[32m    implementation("androidx.core:core-ktx:1.13.1")[m
[32m+[m[32m    implementation("androidx.appcompat:appcompat:1.7.0")[m
[32m+[m[32m    implementation("com.google.android.material:material:1.12.0")[m
[32m+[m[32m    implementation("androidx.constraintlayout:constraintlayout:2.1.4")[m
[32m+[m[32m    implementation("androidx.recyclerview:recyclerview:1.2.1")[m
[32m+[m[32m    implementation("com.google.code.gson:gson:2.8.9")[m
[32m+[m[32m    implementation("com.squareup.retrofit2:retrofit:2.9.0")[m
[32m+[m[32m    implementation("com.squareup.retrofit2:converter-gson:2.9.0")[m
[32m+[m
[32m+[m[32m    // Jetpack Compose[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
     implementation(platform("androidx.compose:compose-bom:2023.03.00"))[m
     implementation("androidx.compose.ui:ui")[m
     implementation("androidx.compose.ui:ui-graphics")[m
     implementation("androidx.compose.ui:ui-tooling-preview")[m
     implementation("androidx.compose.material3:material3")[m
[32m+[m[32m<<<<<<< HEAD[m
 [m
     // Navigation components for fragment navigation[m
     implementation("androidx.navigation:navigation-fragment-ktx:2.6.0")[m
[36m@@ -179,3 +208,23 @@[m [mdependencies {[m
     implementation("com.squareup.retrofit2:converter-gson:2.9.0")[m
 [m
 }[m
[32m+[m[32m=======[m
[32m+[m[32m    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.2")[m
[32m+[m[32m    implementation("androidx.activity:activity-compose:1.7.2")[m
[32m+[m
[32m+[m[32m    // Navigation Components[m
[32m+[m[32m    implementation("androidx.navigation:navigation-fragment-ktx:2.6.0")[m
[32m+[m[32m    implementation("androidx.navigation:navigation-ui-ktx:2.6.0")[m
[32m+[m
[32m+[m[32m    // Testing[m
[32m+[m[32m    testImplementation("junit:junit:4.13.2")[m
[32m+[m[32m    androidTestImplementation("androidx.test.ext:junit:1.1.5")[m
[32m+[m[32m    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")[m
[32m+[m[32m    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.5.0")[m
[32m+[m
[32m+[m[32m    // Compose Debugging[m
[32m+[m[32m    debugImplementation("androidx.compose.ui:ui-tooling:1.5.0")[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
[1mdiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml[m
[1mindex 6d84403..32ed646 100644[m
[1m--- a/app/src/main/AndroidManifest.xml[m
[1m+++ b/app/src/main/AndroidManifest.xml[m
[36m@@ -1,7 +1,15 @@[m
 <manifest xmlns:android="http://schemas.android.com/apk/res/android">[m
[32m+[m[32m<<<<<<< HEAD[m
     <uses-permission android:name="android.permission.INTERNET" />[m
 [m
 [m
[32m+[m[32m=======[m
[32m+[m
[32m+[m[32m    <!-- Permissions -->[m
[32m+[m[32m    <uses-permission android:name="android.permission.INTERNET" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />[m
[32m+[m[32m    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
 [m
     <application[m
         android:allowBackup="true"[m
[36m@@ -10,9 +18,15 @@[m
         android:roundIcon="@mipmap/ic_launcher_round"[m
         android:supportsRtl="true"[m
         android:theme="@style/Theme.JournalApp.NoActionBar"[m
[32m+[m[32m<<<<<<< HEAD[m
         android:networkSecurityConfig="@xml/network_security_config">  <!-- Apply one theme here -->[m
 [m
         <!-- MainActivity declaration -->[m
[32m+[m[32m=======[m
[32m+[m[32m        android:networkSecurityConfig="@xml/network_security_config">[m
[32m+[m
[32m+[m[32m        <!-- MainActivity -->[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
         <activity[m
             android:name=".MainActivity"[m
             android:exported="true"[m
[36m@@ -24,11 +38,16 @@[m
             </intent-filter>[m
         </activity>[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
         <!-- NoteDetailActivity declaration -->[m
[32m+[m[32m=======[m
[32m+[m[32m        <!-- NoteDetailActivity -->[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
         <activity[m
             android:name=".NoteDetailActivity"[m
             android:exported="false"[m
             android:label="@string/title_activity_note_detail"[m
[32m+[m[32m<<<<<<< HEAD[m
             android:theme="@style/Theme.JournalApp.NoActionBar">[m
         </activity>[m
 [m
[36m@@ -37,17 +56,37 @@[m
 [m
         <!--widget declaration-->[m
         <receiver android:name=".JournalAppWidgetProvider"[m
[32m+[m[32m=======[m
[32m+[m[32m            android:theme="@style/Theme.JournalApp.NoActionBar" />[m
[32m+[m
[32m+[m
[32m+[m[32m        <!-- StreakActivity -->[m
[32m+[m[32m        <activity android:name=".StreakActivity" />[m
[32m+[m
[32m+[m[32m        <!-- Widget -->[m
[32m+[m[32m        <receiver[m
[32m+[m[32m            android:name=".JournalAppWidgetProvider"[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
             android:exported="true"[m
             android:label="Journal App Widget">[m
             <intent-filter>[m
                 <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />[m
             </intent-filter>[m
[32m+[m[32m<<<<<<< HEAD[m
 [m
[32m+[m[32m=======[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
             <meta-data[m
                 android:name="android.appwidget.provider"[m
                 android:resource="@xml/widget_info" />[m
         </receiver>[m
 [m
     </application>[m
[32m+[m[32m<<<<<<< HEAD[m
 [m
 </manifest>[m
[32m+[m[32m=======[m
[32m+[m[32m</manifest>[m
[32m+[m
[32m+[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
[1mdiff --git a/app/src/main/assets/journal_questions.json b/app/src/main/assets/journal_questions.json[m
[1mindex 4f64691..efe405a 100644[m
[1m--- a/app/src/main/assets/journal_questions.json[m
[1m+++ b/app/src/main/assets/journal_questions.json[m
[36m@@ -19,3 +19,7 @@[m
     "What changes would you like to make in your life?"[m
   ][m
 }[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m=======[m
[32m+[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
[1mdiff --git a/app/src/main/assets/notes.json b/app/src/main/assets/notes.json[m
[1mindex 36554d8..04a6b13 100644[m
[1m--- a/app/src/main/assets/notes.json[m
[1m+++ b/app/src/main/assets/notes.json[m
[36m@@ -1,6 +1,7 @@[m
 {[m
   "notes": [[m
     {[m
[32m+[m[32m<<<<<<< HEAD[m
       "title": "Test 1",[m
       "content": "This is the content of test 1."[m
     },[m
[36m@@ -9,4 +10,13 @@[m
       "content": "This is the content of test 2."[m
     }[m
   ][m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[32m+[m[32m=======[m
[32m+[m[32m      "title": "Sample Note",[m
[32m+[m[32m      "content": "This is a sample note.",[m
[32m+[m[32m      "fileUri": null[m
[32m+[m[32m    }[m
[32m+[m[32m  ][m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
[1mdiff --git a/app/src/main/java/com/example/journalapp/MainActivity.kt b/app/src/main/java/com/example/journalapp/MainActivity.kt[m
[1mindex 11f332a..cc48203 100644[m
[1m--- a/app/src/main/java/com/example/journalapp/MainActivity.kt[m
[1m+++ b/app/src/main/java/com/example/journalapp/MainActivity.kt[m
[36m@@ -10,6 +10,10 @@[m [mimport android.view.MenuInflater[m
 import android.view.MenuItem[m
 import android.view.View[m
 import android.widget.PopupMenu[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m=======[m
[32m+[m[32mimport android.widget.RemoteViews[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
 import android.widget.Toast[m
 import androidx.appcompat.app.AppCompatActivity[m
 import androidx.appcompat.widget.SearchView[m
[36m@@ -23,10 +27,16 @@[m [mimport retrofit2.Retrofit[m
 import retrofit2.converter.gson.GsonConverterFactory[m
 import java.io.File[m
 import java.io.InputStream[m
[32m+[m[32m<<<<<<< HEAD[m
 import android.widget.Button[m
 import android.widget.RemoteViews[m
 import android.widget.TextView[m
 import java.util.Calendar[m
[32m+[m[32m=======[m
[32m+[m[32mimport java.util.Calendar[m
[32m+[m[32mimport com.google.gson.reflect.TypeToken[m
[32m+[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
 [m
 class MainActivity : AppCompatActivity() {[m
 [m
[36m@@ -42,7 +52,11 @@[m [mclass MainActivity : AppCompatActivity() {[m
 [m
     // Retrofit instance for API service[m
     private val retrofit = Retrofit.Builder()[m
[32m+[m[32m<<<<<<< HEAD[m
         .baseUrl("http://10.0.2.2:5000/") // Replace with your actual server URL[m
[32m+[m[32m=======[m
[32m+[m[32m        .baseUrl("http://10.0.2.2:5001/") // Replace with your actual server URL[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
         .addConverterFactory(GsonConverterFactory.create())[m
         .build()[m
 [m
[36m@@ -53,6 +67,7 @@[m [mclass MainActivity : AppCompatActivity() {[m
         binding = ActivityMainBinding.inflate(layoutInflater)[m
         setContentView(binding.root)[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
         // Set refreshButton initially to GONE[m
         binding.refreshButton.visibility = View.GONE[m
         Log.d("MainActivity", "Refresh button initially set to GONE")[m
[36m@@ -62,6 +77,11 @@[m [mclass MainActivity : AppCompatActivity() {[m
         setSupportActionBar(binding.toolbar)[m
 [m
         // Set up RecyclerView and Adapter[m
[32m+[m[32m=======[m
[32m+[m[32m        setSupportActionBar(binding.toolbar)[m
[32m+[m
[32m+[m[32m        // RecyclerView setup[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
         notesAdapter = NotesAdapter(notesList, { position ->[m
             if (isInSelectionMode) {[m
                 toggleSelection(position)[m
[36m@@ -77,19 +97,31 @@[m [mclass MainActivity : AppCompatActivity() {[m
         binding.notesRecyclerView.layoutManager = LinearLayoutManager(this)[m
         binding.notesRecyclerView.adapter = notesAdapter[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
         reloadNotes()[m
 [m
         updateStreakUI() //streak page update[m
[32m+[m[32m=======[m
[32m+[m[32m        // Load notes and streak data[m
[32m+[m[32m        reloadNotes()[m
[32m+[m[32m        loadStreakData()[m
[32m+[m[32m        updateStreakUI()[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
 [m
         // Floating action button for adding a new note[m
         binding.plusButton.setOnClickListener {[m
             if (!isInSelectionMode) {[m
                 val intent = Intent(this, NoteDetailActivity::class.java)[m
[32m+[m[32m<<<<<<< HEAD[m
                 intent.putExtra("NOTE_ID", -1) // -1 means creating a new note[m
[32m+[m[32m=======[m
[32m+[m[32m                intent.putExtra("NOTE_ID", -1) // -1 indicates creating a new note[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
                 startActivityForResult(intent, REQUEST_CODE_NOTE)[m
             }[m
         }[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
         // Delete button for deleting selected notes[m
         binding.deleteButton.setOnClickListener {[m
             deleteSelectedNotes()[m
[36m@@ -114,10 +146,28 @@[m [mclass MainActivity : AppCompatActivity() {[m
         val inflater: MenuInflater = menuInflater[m
         inflater.inflate(R.menu.menu_main, menu)[m
 [m
[32m+[m[32m=======[m
[32m+[m[32m        // Delete button[m
[32m+[m[32m        binding.deleteButton.setOnClickListener { deleteSelectedNotes() }[m
[32m+[m
[32m+[m[32m        // Dropdown menu button[m
[32m+[m[32m        binding.menuButton.setOnClickListener { showDropdownMenu(it) }[m
[32m+[m
[32m+[m[32m        // Fetch advice from the server[m
[32m+[m[32m        binding.apiButton.setOnClickListener { getAdviceForNotes() }[m
[32m+[m
[32m+[m[32m        // Refresh advice button[m
[32m+[m[32m        binding.refreshButton.setOnClickListener { getAdviceForNotes() }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    override fun onCreateOptionsMenu(menu: Menu): Boolean {[m
[32m+[m[32m        menuInflater.inflate(R.menu.menu_main, menu)[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
         val searchItem = menu.findItem(R.id.action_search)[m
         val searchView = searchItem.actionView as SearchView[m
         searchView.queryHint = "Search notes..."[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
         // Set up lambda-based expand/collapse actions for the search view[m
         searchItem.setOnActionExpandListener(object : MenuItem.OnActionExpandListener {[m
             override fun onMenuItemActionExpand(item: MenuItem): Boolean {[m
[36m@@ -135,6 +185,8 @@[m [mclass MainActivity : AppCompatActivity() {[m
             }[m
         })[m
 [m
[32m+[m[32m=======[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
         searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {[m
             override fun onQueryTextSubmit(query: String?): Boolean {[m
                 searchNotes(query)[m
[36m@@ -150,6 +202,7 @@[m [mclass MainActivity : AppCompatActivity() {[m
         return true[m
     }[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
 [m
 [m
     private fun showDropdownMenu(view: View) {[m
[36m@@ -166,6 +219,18 @@[m [mclass MainActivity : AppCompatActivity() {[m
                     true[m
                 }[m
 [m
[32m+[m[32m=======[m
[32m+[m[32m    private fun showDropdownMenu(view: View) {[m
[32m+[m[32m        val popupMenu = PopupMenu(this, view)[m
[32m+[m[32m        popupMenu.menuInflater.inflate(R.menu.menu_main, popupMenu.menu)[m
[32m+[m
[32m+[m[32m        popupMenu.setOnMenuItemClickListener { menuItem ->[m
[32m+[m[32m            when (menuItem.itemId) {[m
[32m+[m[32m                R.id.action_streak -> {[m
[32m+[m[32m                    startActivity(Intent(this, StreakActivity::class.java))[m
[32m+[m[32m                    true[m
[32m+[m[32m                }[m
[32m+[m[32m>>>>>>> c86f773 (Reinitialize repository)[m
                 R.id.action_settings -> {[m
                     Toast.makeText(this, "Settings selected", Toast.LENGTH_SHORT).show()[m
                     true[m
[36m@@ -184,17 +249,42 @@[m [mclass MainActivity : AppCompatActivity() {[m
         popupMenu.show()[m
     }[m
 [m
[32m+[m[32m<<<<<<< HEAD[m
     private fun reloadNotes() {[m
         val json = loadNotesFromPrivateStorage() ?: loadNotesFromAssets()[m
         if (json != null) {[m
             notesList = Gson().fromJson(json, NotesResponse::class.java).notes.toMutableList()[m
             notesAdapter.updateNotes(notesList)[m
             Log.d("MainActivity", "Notes loaded: ${notesList.size}")[m
[32m+[m[32m=======[m
[32m+[m
[32m+[m[32m    private fun reloadNotes() {[m
[32m+[m[32m        val json = loadNotesFromPrivateStorage() ?: loadNotesFromAssets()[m
[32m+[m[32m        if (json != null) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                // Check if the JSON starts with '[' (array) or '{' (object)[m
[32m+[m[32m                notesList = if (json.trim().startsWith("[")) {[m
[32m+[m[32m                    // Parse as JSON array[m
[32m+[m[32m                    val type = object : TypeToken<MutableList<Note>>() {}.type[m
[32m+[m[32m                    Gson().fromJson(json, type)[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    // Parse as JSON object (legacy format with NotesResponse)[m
[32m+[m[32m                    val notesResponse = Gson().fromJson(json, NotesResponse::class.java)[m
[32m+[m[32m                    notesResponse.notes.toMutableList()[m
[32m+[m[32m                }[m
[32m+[m[32m                notesAdapter.updateNotes(notesList)[m
[32m+[m[32m                Log.d("MainActivity", "Notes loaded: ${notesList.size}")[m
[32m+[m[32m            } catch (e: Exception) {[m
[32m+[m[32m                Log.e("MainActivit